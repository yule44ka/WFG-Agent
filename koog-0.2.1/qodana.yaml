version: "1.0"
linter: jetbrains/qodana-jvm:2025.1

projectJDK: 17

# No implicit inspections:
profile:
  name: empty


# Explicitly enabled inspections:
include:
  # Code style (with quickfixes):
  - name: CheckDependencyLicenses
  - name: KotlinUnusedImport
  - name: UsePropertyAccessSyntax
  - name: ReplaceArrayOfWithLiteral
  - name: SimplifiableCallChain
  - name: ReplaceCallWithBinaryOperator
  - name: NullableBooleanElvis
  - name: ReplaceGetOrSet
  - name: UseExpressionBody
  - name: FilterIsInstanceCallWithClassLiteralArgument
  - name: RedundantElvisReturnNull
  - name: FoldInitializerAndIfToElvis
  - name: IfThenToElvis
  - name: IfThenToSafeAccess
  - name: ReplaceJavaStaticMethodWithKotlinAnalog
  - name: MoveLambdaOutsideParentheses
  - name: UnclearPrecedenceOfBinaryExpression
  - name: SimplifyNegatedBinaryExpression
  - name: SortModifiers
  - name: ProtectedInFinal
  - name: RedundantElseInIf
  - name: RedundantRunCatching
  - name: LiftReturnOrAssignment
  - name: SizeReplaceableByIsEmpty
  - name: ConvertToStringTemplate
  - name: IntroduceWhenSubject
  - name: DeprecatedGradleDependency
  # Vulnurability inspections:
  - name: VulnerableLibrariesGlobal
  # License audit:
  - name: CheckDependencyLicenses
# Exclude from analysis:
exclude:
  - name: All
    paths:
      - .devcontainer
      - .github
      - .gitignore
      - .idea
      - .kotlin
      - build
      - buildSrc
      - docs
      - qodana.sarif.json
# Enable quick fixes for found issues
fixesStrategy: apply